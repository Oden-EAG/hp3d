Import('*')

constrs_shared_objs = SConscript("constrs/SConscript")
datstrs_shared_objs = SConscript("datstrs/SConscript")
element_shared_objs = SConscript("element/SConscript")
gmp_shared_objs = SConscript("GMP/SConscript")
graphics_shared_objs = SConscript("graphics/SConscript")
hpinterp_shared_objs = SConscript("hpinterp/SConscript")
meshgen_shared_objs = SConscript("meshgen/SConscript")
meshmod_shared_objs = SConscript("meshmod/SConscript")
modules_shared_objs = SConscript("modules/SConscript")
numeric_shared_objs = SConscript("numeric/SConscript")
parallel_shared_objs = SConscript("parallel/SConscript")
solver_shared_objs = SConscript("solver/SConscript")
utility_shared_objs = SConscript("utility/SConscript")

hp3d_shared_objs = constrs_shared_objs + \
                   datstrs_shared_objs + \
                   element_shared_objs + \
                   gmp_shared_objs + \
                   graphics_shared_objs + \
                   hpinterp_shared_objs + \
                   meshgen_shared_objs + \
                   meshmod_shared_objs + \
                   modules_shared_objs + \
                   numeric_shared_objs + \
                   parallel_shared_objs + \
                   solver_shared_objs + \
                   utility_shared_objs

# all shared objects required by pyhp3d library:
pyhp3d_shared_objs = filter_mods(SConscript("pyhp3d/SConscript"))
pyhp3d_shared_objs += filter_mods(hp3d_shared_objs)

# LIB and LIBPATH are defined in "#/site_init/site_init.py"
libs = []
for lib in Flatten(LIBS):
    if lib[-2:] == ".a":
        libs.append(File(lib))
    else:
        libs.append(lib)

pyhp3d_acoustics_objs = filter_mods(SConscript("pyhp3d/acoustics/SConscript"))
pyhp3dacous_lib = env.SharedLibrary("pyhp3dacous", pyhp3d_shared_objs + pyhp3d_acoustics_objs,
                                    LIBPATH=LIBPATH,
                                    LIBS=libs)

pyhp3d_elastics_objs = filter_mods(SConscript("pyhp3d/elastics/SConscript"))
pyhp3d_elastics_objs += filter_mods(SConscript("pyhp3d/acoustics/SConscript_ae"))
pyhp3delast_lib = env.SharedLibrary("pyhp3delast", pyhp3d_shared_objs + pyhp3d_elastics_objs,
                                    LIBPATH=LIBPATH,
                                    LIBS=libs)
