      module gauss_quadrature

      implicit none
c
      logical :: INITIALIZED = .FALSE.
c$OMP THREADPRIVATE (INITIALIZED)
c
c======================================================================
c  Constants for normalized integrated Legendre polynomials           |
c======================================================================
c
      real(8), dimension(9,9) :: XLEG0
c$OMP THREADPRIVATE (XLEG0)
c
c
c======================================================================
c  Integration points and corresponding weights for Gaussian          |
c  integration on interal [-1,1].                                     |
c  Remark: they are rescaled to interval [0,1] by routine             |
c  init_gauss_quadrature                                              |
c======================================================================
c
      real(8), dimension(10,10) :: XIGAUS1
c$OMP THREADPRIVATE (XIGAUS1)
      real(8), dimension(10,10) :: WAGAUS1
c$OMP THREADPRIVATE (WAGAUS1)
c
c
c======================================================================
c  Gauss-Jacobi points and weights                                    |
c======================================================================
c
      real(8), dimension(10,10) :: XIGAUSJ
c$OMP THREADPRIVATE (XIGAUSJ)
      real(8), dimension(10,10) :: WAGAUSJ
c$OMP THREADPRIVATE (WAGAUSJ)
c
c
c======================================================================
c  Integration points and corresponding weights for 2-D Gaussian      |
c  integration on a triangle                                          |
c                                                                     |
c  XIGAUSS(i,j,k) = i-th affine coordinate of j-th point of k-th      |
c                   points set                                        |
c  WAGAUSS(j,k)   = weight at j-th point of k-th points set           |
c  NRGAUPO(k)     = number of Gauss points in the k-th points set     |
c  NSELECT(k)     = number of points set to integrate exactly         |
c                   mass matrix for an affine element and order k     |
c======================================================================
c
      real(8), dimension(3,79,20) :: XIGAUSS
c$OMP THREADPRIVATE (XIGAUSS)
      real(8), dimension(  79,20) :: WAGAUSS
c$OMP THREADPRIVATE (WAGAUSS)
c
      integer, parameter, dimension(20) :: NRGAUPO =
     . (/ 1,3,4,6,7,12,13,16,19,25,27,33,37,42,48,52,61,70,73,79 /)
c
      integer, parameter, dimension( 9) :: NSELECT =
     . (/ 2,4,6,8,10,12,14,17,19 /)
c
c
c======================================================================
c  Integration points and corresponding weights for 3-D Gaussian      |
c  integration on the master tetrahedron                              |
c                                                                     |
c  XIGAUSS_TETS(i,j,k) = i-th coordinate of j-th point of k-th points |
c                        set                                          |
c  WAGAUSS_TETS(j,k)   = weight at j-th points of k-th point set      |
c  NRGAUPO_TETS(k)     = number of Gauss points in the k-th set       |
c  NSELECT_TETS(k)     = number of integration rule to integrate      |
c                        exactly mass matrix for k-th order of        |
c                        approximation                                |
c======================================================================
c
      real(8), dimension(3,720,7) :: XIGAUSS_TETS
c$OMP THREADPRIVATE (XIGAUSS_TETS)
      real(8), dimension(  720,7) :: WAGAUSS_TETS
c$OMP THREADPRIVATE (WAGAUSS_TETS)
c
      integer, parameter, dimension(7) :: NRGAUPO_TETS =
c     (p+1)^2(p+2)
     . (/ 12,36,80,150,252,392,576 /)
c
      integer, parameter, dimension(7) :: NSELECT_TETS =
     . (/ 1,2,3,4,5,6,7 /)
c
c
      end module gauss_quadrature
c
c======================================================================
c
      subroutine init_gauss_quadrature
c
      use gauss_quadrature
      implicit none
c
c  ...workspaces
      integer, dimension(19,20)   :: nnod
      integer, dimension(20)      :: nw
      real(8), dimension(6)       :: x
      real(8), dimension(4,79,20) :: barcoo
c
      real(8) :: w,sum1,sum2,ab,ws,xx,y,z,wx,wy,wz,val1,val2,wa,diff
      integer :: kwrite,np,i,j,k,l,n1,n2,nsum,kint,nint,nord
c
c  ...initialize workspaces [Yes, should have been declared as
c     parameters...]
      data nw/1,1,2,2,3,3,4,5,6,6,7,8,10,10,11,13,15,17,17,19/
      data nnod(1,1)/1/
      data nnod(1,2)/3/
      data(nnod(k,3),k=1,2)/1,3/
      data(nnod(k,4),k=1,2)/3,3/
      data(nnod(k,5),k=1,3)/1,3,3/
      data(nnod(k,6),k=1,3)/3,3,6/
      data(nnod(k,7),k=1,4)/1,3,3,6/
      data(nnod(k,8),k=1,5)/1,3,3,3,6/
      data(nnod(k,9),k=1,6)/1,3,3,3,3,6/
      data(nnod(k,10),k=1,6)/1,3,3,6,6,6/
      data(nnod(k,11),k=1,7)/3,3,3,3,3,6,6/
      data(nnod(k,12),k=1,8)/3,3,3,3,3,6,6,6/
      data(nnod(k,13),k=1,10)/1,3,3,3,3,3,3,6,6,6/
      data(nnod(k,14),k=1,10)/3,3,3,3,3,3,6,6,6,6/
      data(nnod(k,15),k=1,11)/3,3,3,3,3,3,6,6,6,6,6/
      data(nnod(k,16),k=1,13)/1,3,3,3,3,3,3,3,6,6,6,6,6/
      data(nnod(k,17),k=1,15)/1,3,3,3,3,3,3,3,3,6,6,6,6,6,6/
      data(nnod(k,18),k=1,17)/1,3,3,3,3,3,3,3,3,3,6,6,6,6,6,6,6/
      data(nnod(k,19),k=1,17)/1,3,3,3,3,3,3,3,3,6,6,6,6,6,6,6,6/
      data(nnod(k,20),k=1,19)/1,3,3,3,3,3,3,3,3,3,3,6,6,6,6,6,6,6,6/
      data (barcoo(k,1,1),k=1,4)
     . / 1.0d0, 0.333333333333333d0, 0.333333333333333d0,
     . 0.333333333333333d0/
      data (barcoo(k,1,2),k=1,4)
     . /0.333333333333333d0, 0.666666666666667d0, 0.166666666666667d0,
     . 0.166666666666667d0/
       data ((barcoo(k,j,3),k=1,4),j=1,2)
     . /-0.5625d0, 0.333333333333333d0, 0.333333333333333d0,
     . 0.333333333333333d0, 0.520833333333333d0, 0.6d0, 0.2d0, 0.2d0/
       data((barcoo(k,j,4),k=1,4),j=1,2)
     . /0.223381589678011d0, 0.108103018168070d0, 0.445948490915965d0,
     . 0.445948490915965d0, 0.109951743655322d0, 0.816847572980459d0,
     . 0.091576213509771d0, 0.091576213509771d0/
      data((barcoo(k,j,5),k=1,4),j=1,3)
     ./0.225d0, 0.333333333333333d0, 0.333333333333333d0,
     . 0.333333333333333d0, 0.132394152788506d0, 0.059715871789770d0,
     . 0.470142064105115d0, 0.470142064105115d0, 0.125939180544827d0,
     . 0.797426985353087d0, 0.101286507323456d0, 0.101286507323456d0/
      data((barcoo(k,j,6),k=1,4),j=1,3)
     ./0.116786275726379d0, 0.501426509658179d0, 0.249286745170910d0,
     . 0.249286745170910d0, 0.050844906370207d0, 0.873821971016996d0,
     . 0.063089014491502d0, 0.063089014491502d0, 0.082851075618374d0,
     . 0.053145049844817d0, 0.310352451033784d0, 0.636502499121399d0/
      data((barcoo(k,j,7),k=1,4),j=1,4)
     ./-0.149570044467682d0, 0.333333333333333d0, 0.333333333333333d0,
     . 0.333333333333333d0, 0.175615257433208d0, 0.479308067841920d0,
     . 0.260345966079040d0, 0.260345966079040d0, 0.053347235608838d0,
     . 0.869739794195568d0, 0.065130102902216d0, 0.065130102902216d0,
     . 0.077113760890257d0, 0.048690315425316d0, 0.312865496004874d0,
     . 0.638444188569810d0/
      data((barcoo(k,j,8),k=1,4),j=1,5)
     ./0.144315607677787d0, 0.333333333333333d0, 0.333333333333333d0,
     . 0.333333333333333d0, 0.095091634267285d0, 0.081414823414554d0,
     . 0.459292588292723d0, 0.459292588292723d0, 0.103217370534718d0,
     . 0.658861384496480d0, 0.170569307751760d0, 0.170569307751760d0,
     . 0.032458497623198d0, 0.898905543365938d0, 0.050547228317031d0,
     . 0.050547228317031d0, 0.027230314174435d0, 0.008394777409958d0,
     . 0.263112829634638d0, 0.728492392955404d0/
      data((barcoo(k,j,9),k=1,4),j=1,6)
     ./0.097135796282799d0, 0.333333333333333d0, 0.333333333333333d0,
     . 0.333333333333333d0, 0.031334700227139d0, 0.020634961602525d0,
     . 0.489682519198738d0, 0.489682519198738d0, 0.077827541004774d0,
     . 0.125820817014127d0, 0.437089591492937d0, 0.437089591492937d0,
     . 0.079647738927210d0, 0.623592928761935d0, 0.188203535619033d0,
     . 0.188203535619033d0, 0.025577675658698d0, 0.910540973211095d0,
     . 0.044729513394453d0, 0.044729513394453d0, 0.043283539377289d0,
     . 0.036838412054736d0, 0.221962989160766d0, 0.741198598784498d0/
      data((barcoo(k,j,10),k=1,4),j=1,6)
     ./0.090817990382754d0, 0.333333333333333d0, 0.333333333333333d0,
     . 0.333333333333333d0, 0.036725957756467d0, 0.028844733232685d0,
     . 0.485577633383657d0, 0.485577633383657d0, 0.045321059435528d0,
     . 0.781036849029926d0, 0.109481575485037d0, 0.109481575485037d0,
     . 0.072757916845420d0, 0.141707219414880d0, 0.307939838764121d0,
     . 0.550352941820999d0, 0.028327242531057d0, 0.025003534762686d0,
     . 0.246672560639903d0, 0.728323904597411d0, 0.009421666963733d0,
     . 0.009540815400299d0, 0.066803251012200d0, 0.923655933587500d0/
      data((barcoo(k,j,11),k=1,4),j=1,7)
     ./0.000927006328961d0,-0.069222096541517d0, 0.534611048270758d0,
     . 0.534611048270758d0, 0.077149534914813d0, 0.202061394068290d0,
     . 0.398969302965855d0, 0.398969302965855d0, 0.059322977380774d0,
     . 0.593380199137435d0, 0.203309900431282d0, 0.203309900431282d0,
     . 0.036184540503418d0, 0.761298175434837d0, 0.119350912282581d0,
     . 0.119350912282581d0, 0.013659731002678d0, 0.935270103777448d0,
     . 0.032364948111276d0, 0.032364948111276d0, 0.052337111962204d0,
     . 0.050178138310495d0, 0.356620648261293d0, 0.593201213428213d0,
     . 0.020707659639141d0, 0.021022016536166d0, 0.171488980304042d0,
     . 0.807489003159792d0/
      data((barcoo(k,j,12),k=1,4),j=1,8)
     ./0.025731066440455d0, 0.023565220452390d0, 0.488217389773805d0,
     . 0.488217389773805d0, 0.043692544538038d0, 0.120551215411079d0,
     . 0.439724392294460d0, 0.439724392294460d0, 0.062858224217885d0,
     . 0.457579229975768d0, 0.271210385012116d0, 0.271210385012116d0,
     . 0.034796112930709d0, 0.744847708916828d0, 0.127576145541586d0,
     . 0.127576145541586d0, 0.006166261051559d0, 0.957365299093579d0,
     . 0.021317350453210d0, 0.021317350453210d0, 0.040371557766381d0,
     . 0.115343494534698d0, 0.275713269685514d0, 0.608943235779788d0 ,
     . 0.022356773202303d0, 0.022838332222257d0, 0.281325580989940d0,
     . 0.695836086787803d0, 0.017316231108659d0, 0.025734050548330d0,
     . 0.116251915907597d0, 0.858014033544073d0/
      data((barcoo(k,j,13),k=1,4),j=1,10)
     ./0.052520923400802d0, 0.333333333333333d0, 0.333333333333333d0,
     . 0.333333333333333d0, 0.011280145209330d0, 0.009903630120591d0,
     . 0.495048184939705d0, 0.495048184939705d0, 0.031423518362454d0,
     . 0.062566729780852d0, 0.468716635109574d0, 0.468716635109574d0,
     . 0.047072502504194d0, 0.170957326397447d0, 0.414521336801277d0,
     . 0.414521336801277d0, 0.047363586536355d0, 0.541200855914337d0,
     . 0.229399572042831d0, 0.229399572042831d0, 0.031167529045794d0,
     . 0.771151009607340d0, 0.114424495196330d0, 0.114424495196330d0,
     . 0.007975771465074d0, 0.950377217273082d0, 0.024811391363459d0,
     . 0.024811391363459d0, 0.036848402728732d0, 0.094853828379579d0,
     . 0.268794997058761d0, 0.636351174561660d0, 0.017401463303822d0,
     . 0.018100773278807d0, 0.291730066734288d0, 0.690169159986905d0,
     . 0.015521786839045d0, 0.022233076674090d0, 0.126357385491669d0,
     . 0.851409537834241d0/
      data((barcoo(k,j,14),k=1,4),j=1,10)
     ./0.021883581369429d0, 0.022072179275643d0, 0.488963910362179d0,
     . 0.488963910362179d0, 0.032788353544125d0, 0.164710561319092d0,
     . 0.417644719340454d0, 0.417644719340454d0, 0.051774104507292d0,
     . 0.453044943382323d0, 0.273477528308839d0, 0.273477528308839d0,
     . 0.042162588736993d0, 0.645588935174913d0, 0.177205532412543d0,
     . 0.177205532412543d0, 0.014433699669777d0, 0.876400233818255d0,
     . 0.061799883090873d0, 0.061799883090873d0, 0.004923403602400d0,
     . 0.961218077502598d0, 0.019390961248701d0, 0.019390961248701d0,
     . 0.024665753212564d0, 0.057124757403648d0, 0.172266687821356d0,
     . 0.770608554774996d0, 0.038571510787061d0, 0.092916249356972d0,
     . 0.336861459796345d0, 0.570222290846683d0, 0.014436308113534d0,
     . 0.014646950055654d0, 0.298372882136258d0, 0.686980167808088d0,
     . 0.005010228838501d0, 0.001268330932872d0, 0.118974497696957d0,
     . 0.879757171370171d0/
      data((barcoo(k,j,15),k=1,4),j=1,11)
     ./0.001916875642849d0,-0.013945833716486d0, 0.506972916858243d0,
     . 0.506972916858243d0, 0.044249027271145d0, 0.137187291433955d0,
     . 0.431406354283023d0, 0.431406354283023d0, 0.051186548718852d0,
     . 0.444612710305711d0, 0.277693644847144d0, 0.277693644847144d0,
     . 0.023687735870688d0, 0.747070217917492d0, 0.126464891041254d0,
     . 0.126464891041254d0, 0.013289775690021d0, 0.858383228050628d0,
     . 0.070808385974686d0, 0.070808385974686d0, 0.004748916608192d0,
     . 0.962069659517853d0, 0.018965170241073d0, 0.018965170241073d0,
     . 0.038550072599593d0, 0.133734161966621d0, 0.261311371140087d0,
     . 0.604954466893291d0, 0.027215814320624d0, 0.036366677396917d0,
     . 0.388046767090269d0, 0.575586555512814d0, 0.002182077366797d0,
     .-0.010174883126571d0, 0.285712220049916d0, 0.724462663076655d0,
     . 0.021505319847731d0, 0.036843869875878d0, 0.215599664072284d0,
     . 0.747556466051838d0, 0.007673942631049d0, 0.012459809331199d0,
     . 0.103575616576386d0, 0.883964574092416d0/
      data((barcoo(k,j,16),k=1,4),j=1,13)
     ./.046875697427642d0, .333333333333333d0, .333333333333333d0,
     . .333333333333333d0, .006405878578585d0, .005238916103123d0,
     . .497380541948438d0, .497380541948438d0, .041710296739387d0,
     . .173061122901295d0, .413469438549352d0, .413469438549352d0,
     . .026891484250064d0, .059082801866017d0, .470458599066991d0,
     . .470458599066991d0, .042132522761650d0, .518892500060958d0,
     . .240553749969521d0, .240553749969521d0, .030000266842773d0,
     . .704068411554854d0, .147965794222573d0, .147965794222573d0,
     . .014200098925024d0, .849069624685052d0, .075465187657474d0,
     . .075465187657474d0, .003582462351273d0, .966807194753950d0,
     . .016596402623025d0, .016596402623025d0, .032773147460627d0,
     . .103575692245252d0, .296555596579887d0, .599868711174861d0,
     . .015298306248441d0, .020083411655416d0, .337723063403079d0,
     . .642193524941505d0, .002386244192839d0,-.004341002614139d0,
     . .204748281642812d0, .799592720971327d0, .019084792755899d0,
     . .041941786468010d0, .189358492130623d0, .768699721401368d0,
     . .006850054546542d0, .014317320230681d0, .085283615682657d0,
     . .900399064086661d0/
c      data((barcoo(k,j,17),k=1,4),j=1,15)
      data((barcoo(k,j,17),k=1,4),j=1,10)
     ./.033437199290803d0, .333333333333333d0, .333333333333333d0,
     . .333333333333333d0, .005093415440507d0, .005658918886452d0,
     . .497170540556774d0, .497170540556774d0, .014670864527638d0,
     . .035647354750751d0, .482176322624625d0, .482176322624625d0,
     . .024350878353672d0, .099520061958437d0, .450239969020782d0,
     . .450239969020782d0, .031107550868969d0, .199467521245206d0,
     . .400266239377397d0, .400266239377397d0, .031257111218620d0,
     . .495717464058095d0, .252141267970953d0, .252141267970953d0,
     . .024815654339665d0, .675905990683077d0, .162047004658461d0,
     . .162047004658461d0, .014056073070557d0, .848248235478508d0,
     . .075875882260746d0, .075875882260746d0, .003194676173779d0,
     . .968690546064356d0, .015654726967822d0, .015654726967822d0,
     . .008119655318993d0, .010186928826919d0, .334319867363658d0,
c     . .655493203809423d0, .026805742283163d0, .135440871671036d0,
     . .655493203809423d0/
      data((barcoo(k,j,17),k=1,4),j=11,15)
     ./                    .026805742283163d0, .135440871671036d0,
     . .292221537796944d0, .572337590532020d0, .018459993210822d0,
     . .054423924290583d0, .319574885423190d0, .626001190286228d0,
     . .008476868534328d0, .012868560833637d0, .190704224192292d0,
     . .796427214974071d0, .018292796770025d0, .067165782413524d0,
     . .180483211648746d0, .752351005937729d0, .006665632004165d0,
     . .014663182224828d0, .080711313679564d0, .904625504095608d0/
c      data((barcoo(k,j,18),k=1,4),j=1,17)
      data((barcoo(k,j,18),k=1,4),j=1,10)
     ./.030809939937647d0, .333333333333333d0, .333333333333333d0,
     . .333333333333333d0, .009072436679404d0, .013310382738157d0,
     . .493344808630921d0, .493344808630921d0, .018761316939594d0,
     . .061578811516086d0, .469210594241957d0, .469210594241957d0,
     . .019441097985477d0, .127437208225989d0, .436281395887006d0,
     . .436281395887006d0, .027753948610810d0, .210307658653168d0,
     . .394846170673416d0, .394846170673416d0, .032256225351457d0,
     . .500410862393686d0, .249794568803157d0, .249794568803157d0,
     . .025074032616922d0, .677135612512315d0, .161432193743843d0,
     . .161432193743843d0, .015271927971832d0, .846803545029257d0,
     . .076598227485371d0, .076598227485371d0, .006793922022963d0,
     . .951495121293100d0, .024252439353450d0, .024252439353450d0,
     .-.002223098729920d0, .913707265566071d0, .043146367216965d0,


c     . .043146367216965d0, .006331914076406d0, .008430536202420d0,
     . .043146367216965d0/
      data((barcoo(k,j,18),k=1,4),j=11,17)
     ./                    .006331914076406d0, .008430536202420d0,
     . .358911494940944d0, .632657968856636d0, .027257538049138d0,
     . .131186551737188d0, .294402476751957d0, .574410971510855d0,
     . .017676785649465d0, .050203151565675d0, .325017801641814d0,
     . .624779046792512d0, .018379484638070d0, .066329263810916d0,
     . .184737559666046d0, .748933176523037d0, .008104732808192d0,
     . .011996194566236d0, .218796800013321d0, .769207005420443d0,
     . .007634129070725d0, .014858100590125d0, .101179597136408d0,
     . .883962302273467d0, .000046187660794d0,-.035222015287949d0,
     . .020874755282586d0, 1.014347260005363d0/
c      data((barcoo(k,j,19),k=1,4),j=1,17)
      data((barcoo(k,j,19),k=1,4),j=1,10)
     ./.032906331388919d0, .333333333333333d0, .333333333333333d0,
     . .333333333333333d0, .010330731891272d0, .020780025853987d0,
     . .489609987073006d0, .489609987073006d0, .022387247263016d0,
     . .090926214604215d0, .454536892697893d0, .454536892697893d0,
     . .030266125869468d0, .197166638701138d0, .401416680649431d0,
     . .401416680649431d0, .030490967802198d0, .488896691193805d0,
     . .255551654403098d0, .255551654403098d0, .024159212741641d0,
     . .645844115695741d0, .177077942152130d0, .177077942152130d0,
     . .016050803586801d0, .779877893544096d0, .110061053227952d0,
     . .110061053227952d0, .008084580261784d0, .888942751496321d0,
     . .055528624251840d0, .055528624251840d0, .002079362027485d0,
     . .974756272445543d0, .012621863777229d0, .012621863777229d0,
     . .003884876904981d0, .003611417848412d0, .395754787356943d0,

c     . .600633794794645d0, .025574160612022d0, .134466754530780d0,
     . .600633794794645d0/
      data((barcoo(k,j,19),k=1,4),j=11,17)
     ./                    .025574160612022d0, .134466754530780d0,
     . .307929983880436d0, .557603261588784d0, .008880903573338d0,
     . .014446025776115d0, .264566948406520d0, .720987025817365d0,
     . .016124546761731d0, .046933578838178d0, .358539352205951d0,
     . .594527068955871d0, .002491941817491d0, .002861120350567d0,
     . .157807405968595d0, .839331473680839d0, .018242840118951d0,
     . .223861424097916d0, .075050596975911d0, .701087978926173d0,
     . .010258563736199d0, .034647074816760d0, .142421601113383d0,
     . .822931324069857d0, .003799928855302d0, .010161119296278d0,
     . .065494628082938d0, .924344252620784d0/
c----------------------------------------------------------------------
c
c  ...intialize
      XLEG0(1:9,1:9)=0.d0
c
      XLEG0(1,1)=   -1.d0/2.d0
c
      XLEG0(2,2)=   -1.d0/2.d0
c
      XLEG0(3,1)=    1.d0/8.d0
      XLEG0(3,3)=   -5.d0/8.d0
c
      XLEG0(4,2)=    3.d0/8.d0
      XLEG0(4,4)=   -7.d0/8.d0
c
      XLEG0(5,1)=   -1.d0/16.d0
      XLEG0(5,3)=    7.d0/8.d0
      XLEG0(5,5)=   -21.d0/16.d0
c
      XLEG0(6,2)=   -5.d0/16.d0
      XLEG0(6,4)=    15.d0/8.d0
      XLEG0(6,6)=   -33.d0/16.d0
c
      XLEG0(7,1)=    5.d0/128.d0
      XLEG0(7,3)=   -135.d0/128.d0
      XLEG0(7,5)=    495.d0/128.d0
      XLEG0(7,7)=   -429.d0/128.d0
c
      XLEG0(8,2)=    35.d0/128.d0
      XLEG0(8,4)=   -385.d0/128.d0
      XLEG0(8,6)=    1001.d0/128.d0
      XLEG0(8,8)=   -715.d0/128.d0
c
      XLEG0(9,1)=   -7.d0/256.d0
      XLEG0(9,3)=    77.d0/64.d0
      XLEG0(9,5)=   -1001.d0/128.d0
      XLEG0(9,7)=    1001.d0/64.d0
      XLEG0(9,9)=   -2431.d0/256.d0
c
c
      XIGAUSJ(1:10,1:10)=0.d0 ; WAGAUSJ(1:10,1:10)=0.d0
c
      XIGAUSJ(1,1) = 2.500000000000000d-01
      WAGAUSJ(1,1) = 3.333333333333333d-01
c
      XIGAUSJ(1,2) = 1.225148226554414d-01
      XIGAUSJ(2,2) = 5.441518440112253d-01
      WAGAUSJ(1,2) = 2.325474512535080d-01
      WAGAUSJ(2,2) = 1.007858820798254d-01
c
      XIGAUSJ(1,3) = 7.299402407314964d-02
      XIGAUSJ(2,3) = 3.470037660383519d-01
      XIGAUSJ(3,3) = 7.050022098884984d-01
      WAGAUSJ(1,3) = 1.571363610648865d-01
      WAGAUSJ(2,3) = 1.462462692598660d-01
      WAGAUSJ(3,3) = 2.995070300858069d-02
c
      XIGAUSJ(1,4) = 4.850054944699739d-02
      XIGAUSJ(2,4) = 2.386007375518622d-01
      XIGAUSJ(3,4) = 5.170472951043674d-01
      XIGAUSJ(4,4) = 7.958514178967728d-01
      WAGAUSJ(1,4) = 1.108884156112781d-01
      WAGAUSJ(2,4) = 1.434587897992143d-01
      WAGAUSJ(3,4) = 6.863388717292308d-02
      WAGAUSJ(4,4) = 1.035224074991807d-02
c
      XIGAUSJ(1,5) = 3.457893991821509d-02
      XIGAUSJ(2,5) = 1.734803207716956d-01
      XIGAUSJ(3,5) = 3.898863870655194d-01
      XIGAUSJ(4,5) = 6.343334726308869d-01
      XIGAUSJ(5,5) = 8.510542129470164d-01
      WAGAUSJ(1,5) = 8.176478428577089d-02
      WAGAUSJ(2,5) = 1.261989618999116d-01
      WAGAUSJ(3,5) = 8.920016122158993d-02
      WAGAUSJ(4,5) = 3.205560072296194d-02
      WAGAUSJ(5,5) = 4.113825203099022d-03
c
      XIGAUSJ(1,6) = 2.590455509366713d-02
      XIGAUSJ(2,6) = 1.315639416579851d-01
      XIGAUSJ(3,6) = 3.024369180228914d-01
      XIGAUSJ(4,6) = 5.090364131647522d-01
      XIGAUSJ(5,6) = 7.156811273117138d-01
      XIGAUSJ(6,6) = 8.868056161775618d-01
      WAGAUSJ(1,6) = 6.253870272658091d-02
      WAGAUSJ(2,6) = 1.073764997367807d-01
      WAGAUSJ(3,6) = 9.457718674854128d-02
      WAGAUSJ(4,6) = 5.128957112961616d-02
      WAGAUSJ(5,6) = 1.572029718494503d-02
      WAGAUSJ(6,6) = 1.831075806869294d-03
c
      XIGAUSJ(1,7) = 2.013277377340039d-02
      XIGAUSJ(2,7) = 1.030890291480490d-01
      XIGAUSJ(3,7) = 2.405541260480576d-01
      XIGAUSJ(4,7) = 4.140021445970598d-01
      XIGAUSJ(5,7) = 6.000215132789929d-01
      XIGAUSJ(6,7) = 7.735172465914375d-01
      XIGAUSJ(7,7) = 9.111831665630028d-01
      WAGAUSJ(1,7) = 4.927650177643803d-02
      WAGAUSJ(2,7) = 9.069882461268632d-02
      WAGAUSJ(3,7) = 9.173380327979548d-02
      WAGAUSJ(4,7) = 6.314637870889128d-02
      WAGAUSJ(5,7) = 2.942221128952861d-02
      WAGAUSJ(6,7) = 8.162925632304701d-03
      WAGAUSJ(7,7) = 8.926880336892111d-04
c
      XIGAUSJ(1,8) = 1.609775955192100d-02
      XIGAUSJ(2,8) = 8.290061748565108d-02
      XIGAUSJ(3,8) = 1.954751684887400d-01
      XIGAUSJ(4,8) = 3.416519914772023d-01
      XIGAUSJ(5,8) = 5.055970781844891d-01
      XIGAUSJ(6,8) = 6.695522718243614d-01
      XIGAUSJ(7,8) = 8.157717035832837d-01
      XIGAUSJ(8,8) = 9.285089649599069d-01
      WAGAUSJ(1,8) = 3.977895780669052d-02
      WAGAUSJ(2,8) = 7.681809326722272d-02
      WAGAUSJ(3,8) = 8.528476917193864d-02
      WAGAUSJ(4,8) = 6.844718342165326d-02
      WAGAUSJ(5,8) = 4.081442638854393d-02
      WAGAUSJ(6,8) = 1.724686378023499d-02
      WAGAUSJ(7,8) = 4.474521713014391d-03
      WAGAUSJ(8,8) = 4.685177840346948d-04
c
      XIGAUSJ(1,9) = 1.316588559711440d-02
      XIGAUSJ(2,9) = 6.808452959376765d-02
      XIGAUSJ(3,9) = 1.617595167640745d-01
      XIGAUSJ(4,9) = 2.858910883392204d-01
      XIGAUSJ(5,9) = 4.294536453878129d-01
      XIGAUSJ(6,9) = 5.796940563511632d-01
      XIGAUSJ(7,9) = 7.232685717403354d-01
      XIGAUSJ(8,9) = 8.474368420132374d-01
      XIGAUSJ(9,9) = 9.412458642132742d-01
      WAGAUSJ(1,9) = 3.276014511103931d-02
      WAGAUSJ(2,9) = 6.548953703339690d-02
      WAGAUSJ(3,9) = 7.767356916055582d-02
      WAGAUSJ(4,9) = 6.928439568980466d-02
      WAGAUSJ(5,9) = 4.854062786450648d-02
      WAGAUSJ(6,9) = 2.634328090254984d-02
      WAGAUSJ(7,9) = 1.040611657935223d-02
      WAGAUSJ(8,9) = 2.574398645608714d-03
      WAGAUSJ(9,9) = 2.612623465194633d-04
c
      XIGAUSJ( 1,10) = 1.096845245617428d-02
      XIGAUSJ( 2,10) = 5.689815053365793d-02
      XIGAUSJ( 3,10) = 1.359502340502289d-01
      XIGAUSJ( 4,10) = 2.422811961325236d-01
      XIGAUSJ( 5,10) = 3.680078504493376d-01
      XIGAUSJ( 6,10) = 5.038071264148740d-01
      XIGAUSJ( 7,10) = 6.396094886547097d-01
      XIGAUSJ( 8,10) = 7.653476795481078d-01
      XIGAUSJ( 9,10) = 8.717100745744084d-01
      XIGAUSJ(10,10) = 9.508742926405231d-01
      WAGAUSJ( 1,10) = 2.743408871009715d-02
      WAGAUSJ( 2,10) = 5.627293640280857d-02
      WAGAUSJ( 3,10) = 7.006950770866616d-02
      WAGAUSJ( 4,10) = 6.745221938143783d-02
      WAGAUSJ( 5,10) = 5.288378876696426d-02
      WAGAUSJ( 6,10) = 3.385456501681412d-02
      WAGAUSJ( 7,10) = 1.719757504655300d-02
      WAGAUSJ( 8,10) = 6.469889068558509d-03
      WAGAUSJ( 9,10) = 1.545523194736567d-03
      WAGAUSJ(10,10) = 1.532400366971604d-04
c
c
      XIGAUS1(1:10,1:10)=0.d0 ; WAGAUS1(1:10,1:10)=0.d0
c
c  ...points
      XIGAUS1(1,1)=0.000000000000000
c
      XIGAUS1(1,2)=-.577350269189626D0
      XIGAUS1(2,2)= .577350269189626D0
c
      XIGAUS1(1,3)=-.774596669241483D0
      XIGAUS1(2,3)= .000000000000000D0
      XIGAUS1(3,3)= .774596669241483D0
c
      XIGAUS1(1,4)=-.861136311594053D0
      XIGAUS1(2,4)=-.339981043584856D0
      XIGAUS1(3,4)= .339981043584856D0
      XIGAUS1(4,4)= .861136311594053D0
c
      XIGAUS1(1,5)=-.906179845938664D0
      XIGAUS1(2,5)=-.538469310105683D0
      XIGAUS1(3,5)= .000000000000000D0
      XIGAUS1(4,5)= .538469310105683D0
      XIGAUS1(5,5)= .906179845938664D0
c
      XIGAUS1(1,6)=-.932469514203152D0
      XIGAUS1(2,6)=-.661209386466265D0
      XIGAUS1(3,6)=-.238619186083197D0
      XIGAUS1(4,6)= .238619186083197D0
      XIGAUS1(5,6)= .661209386466265D0
      XIGAUS1(6,6)= .932469514203152D0
c
      XIGAUS1(1,7)=-.949107912342759D0
      XIGAUS1(2,7)=-.741531185599394D0
      XIGAUS1(3,7)=-.405845151377397D0
      XIGAUS1(4,7)= .000000000000000D0
      XIGAUS1(5,7)= .405845151377397D0
      XIGAUS1(6,7)= .741531185599394D0
      XIGAUS1(7,7)= .949107912342759D0
c
      XIGAUS1(1,8)=-.960289856497536D0
      XIGAUS1(2,8)=-.796666477413627D0
      XIGAUS1(3,8)=-.525532409916329D0
      XIGAUS1(4,8)=-.183434642495650D0
      XIGAUS1(5,8)= .183434642495650D0
      XIGAUS1(6,8)= .525532409916329D0
      XIGAUS1(7,8)= .796666477413627D0
      XIGAUS1(8,8)= .960289856497536D0
c
      XIGAUS1(1,9)=-.968160239507626D0
      XIGAUS1(2,9)=-.836031107326636D0
      XIGAUS1(3,9)=-.613371432700590D0
      XIGAUS1(4,9)=-.324253423403809D0
      XIGAUS1(5,9)= .000000000000000D0
      XIGAUS1(6,9)= .324253423403809D0
      XIGAUS1(7,9)= .613371432700590D0
      XIGAUS1(8,9)= .836031107326636D0
      XIGAUS1(9,9)= .968160239507626D0
c
      XIGAUS1(1 ,10)=-.9739065285171717200779640D0
      XIGAUS1(2 ,10)=-.8650633666889845107320967D0
      XIGAUS1(3 ,10)=-.6794095682990244062343274D0
      XIGAUS1(4 ,10)=-.4333953941292471907992659D0
      XIGAUS1(5 ,10)=-.1488743389816312108848260D0
      XIGAUS1(6 ,10)= .1488743389816312108848260D0
      XIGAUS1(7 ,10)= .4333953941292471907992659D0
      XIGAUS1(8 ,10)= .6794095682990244062343274D0
      XIGAUS1(9 ,10)= .8650633666889845107320967D0
      XIGAUS1(10,10)= .9739065285171717200779640D0
c
c  ...weights
      WAGAUS1(1,1)= 2.000000000000000D0
c
      WAGAUS1(1,2)= 1.000000000000000D0
      WAGAUS1(2,2)= 1.000000000000000D0
c
      WAGAUS1(1,3) = .555555555555556D0
      WAGAUS1(2,3) = .888888888888889D0
      WAGAUS1(3,3) = .555555555555556D0
c
      WAGAUS1(1,4) = .347854845137454D0
      WAGAUS1(2,4) = .652145154862546D0
      WAGAUS1(3,4) = .652145154862546D0
      WAGAUS1(4,4) = .347854845137454D0
c
      WAGAUS1(1,5) = .236926885056189D0
      WAGAUS1(2,5) = .478628670499366D0
      WAGAUS1(3,5) = .568888888888889D0
      WAGAUS1(4,5) = .478628670499366D0
      WAGAUS1(5,5) = .236926885056189D0
c
      WAGAUS1(1,6) = .171324492379170D0
      WAGAUS1(2,6) = .360761573048139D0
      WAGAUS1(3,6) = .467913934572691D0
      WAGAUS1(4,6) = .467913934572691D0
      WAGAUS1(5,6) = .360761573048139D0
      WAGAUS1(6,6) = .171324492379170D0
c
      WAGAUS1(1,7) = .129484966168870D0
      WAGAUS1(2,7) = .279705391489277D0
      WAGAUS1(3,7) = .381830050505119D0
      WAGAUS1(4,7) = .417959183673469D0
      WAGAUS1(5,7) = .381830050505119D0
      WAGAUS1(6,7) = .279705391489277D0
      WAGAUS1(7,7) = .129484966168870D0
c
      WAGAUS1(1,8) = .101228536290376D0
      WAGAUS1(2,8) = .222381034453374D0
      WAGAUS1(3,8) = .313706645877887D0
      WAGAUS1(4,8) = .362683783378362D0
      WAGAUS1(5,8) = .362683783378362D0
      WAGAUS1(6,8) = .313706645877887D0
      WAGAUS1(7,8) = .222381034453374D0
      WAGAUS1(8,8) = .101228536290376D0
c
      WAGAUS1(1,9) = .081274388361574D0
      WAGAUS1(2,9) = .180648160694857D0
      WAGAUS1(3,9) = .260610696402935D0
      WAGAUS1(4,9) = .312347077040003D0
      WAGAUS1(5,9) = .330239355001260D0
      WAGAUS1(6,9) = .312347077040003D0
      WAGAUS1(7,9) = .260610696402935D0
      WAGAUS1(8,9) = .180648160694857D0
      WAGAUS1(9,9) = .081274388361574D0
c
      WAGAUS1(1, 10)=.0666713443086881375935688D0
      WAGAUS1(2, 10)=.1494513491505805931457763D0
      WAGAUS1(3, 10)=.2190863625159820439955349D0
      WAGAUS1(4, 10)=.2692667193099963550912269D0
      WAGAUS1(5, 10)=.2955242247147528701738930D0
      WAGAUS1(6, 10)=.2955242247147528701738930D0
      WAGAUS1(7, 10)=.2692667193099963550912269D0
      WAGAUS1(8, 10)=.2190863625159820439955349D0
      WAGAUS1(9, 10)=.1494513491505805931457763D0
      WAGAUS1(10,10)=.0666713443086881375935688D0
c
c  ...printing flag
      kwrite=0
c
c======================================================================
c  Gauss points and weights for a triangle in terms of baricentrical  |
c  coordinates                                                        |
c======================================================================
      do 210 np=1,19
      i=1
      j=1
 100  continue
      do 111 k=1,3
        x(k) = barcoo(k+1,j,np)
        x(k+3) = x(k)
        XIGAUSS(k,i,np) = x(k)
 111  continue
      w = barcoo(1,j,np)
      WAGAUSS(i,np) = w
      i = i+1
      if(nnod(j,np).eq.1) goto 150
      do 121 k=1,3
         XIGAUSS(k,i,np) = x(k+1)
         XIGAUSS(k,i+1,np) = x(k+2)
 121  continue
      WAGAUSS(i,np) = w
      WAGAUSS(i+1,np) = w
      i=i+2
      if(nnod(j,np).eq.3) goto 150
      do 140 l=1,3
        do 130 k=1,3
          XIGAUSS(k,i+l-1,np) = x(3+l-k)
 130    continue
        WAGAUSS(i+l-1,np) = w
 140  continue
      i = i+3
 150  continue
      j = j+1
      if(i.le.NRGAUPO(np)) goto 100
      n1 = nw(np)
      nsum = 0
      do 160 j=1,n1
        nsum = nsum + nnod(j,np)
 160  continue
      if(nsum.ne.NRGAUPO(np))then
        write(*,1003) np,NRGAUPO(np),nsum
 1003   format('FOR THE ',i2,'ORDER OF INTEGRATION',/,
     .  'GAUSS POINTS NUMBER = ',i2,' CALCULATED NUMBER = ',i2,' !!!')
        call pause
      else
      endif
      n2 = NRGAUPO(np)
      sum1 = 0.0d0
      sum2 = 0.0d0
      do 180 j=1,n2
        sum1 = sum1 + WAGAUSS(j,np)
        do 170 k=1,3
            sum2 = sum2 + XIGAUSS(k,j,np)
 170    continue
        ab = dabs(sum2 - 1.0d0)
        if(ab.gt.1.0d-13) then
            write(*,1004) np,j,sum2
 1004       format('FOR THE ',i2,' ORDER OF INTEGRATION',/,
     .         ' IN ',i2,' POINT SUM OF COORDINATES = ',f20.15,' !!!')
            call pause
        else
        endif
        sum2 = 0.0d0
 180  continue
      ab = dabs(sum1 - 1.0d0)
      if(ab.gt.1.0d-13) then
          write(*,1005) np,sum1
 1005     format('FOR THE ',i2,' ORDER OF INTEGRATION',/,
     .           'SUM OF WEIGHTS = ',f20.15,' !!!')
      call pause
      else
      endif
        if(kwrite.gt.1) then
          write(*,1001) np,np,np,np,np
          write(*,1001) np,np,np,np,np
          do 200 k=1,NRGAUPO(np)
            write(*,1002) WAGAUSS(k,np),(XIGAUSS(l,k,np),l=1,3)
 200      continue
        else
        endif
 210  continue
 1001 format('ORDER OF INTEGRATION NP =',I2,/, 'WAGAUSS(.,',i2,
     .       ') ',7X,'XIGAUSS(1,.,',i2,')     XIGAUSS(2,.,',i2,
     .       ') =   XIGAUSS(3,.,',i2,') =')
 1002 format(4F20.15)
c
c
c======================================================================
c  Rescale 1-D Gauss points and weights on interval [0,1]             |
c======================================================================
c
      do i=1,10
        do j=1,i
          XIGAUS1(j,i) = 0.5d0*(1.0d0 + XIGAUS1(j,i))
          WAGAUS1(j,i) = 0.5d0*WAGAUS1(j,i)
        enddo
      enddo
c
c
c======================================================================
c  Values of affine coordinates and weights for a Gaussian quadrature |
c  on a tetrahedron corresponding to Duffy's transformation           |
c======================================================================
c
c  ...loop through quadrature rules
      do np=1,7
        if (kwrite.eq.1) then
          write(*,7001) np
 7001     format(' const_T: np = ',i2)
        endif
c
c  .....loop through integration points
        l=0
        ws = 0.d0
        do k=1,np+2
          z = XIGAUS1(k,np+2); wz = WAGAUS1(k,np+2)
          do j=1,np+1
            y = XIGAUS1(j,np+1); wy = WAGAUS1(j,np+1)
            do i=1,np+1
              xx = XIGAUS1(i,np+1); wx = WAGAUS1(i,np+1)
              l=l+1
              XIGAUSS_TETS(1,l,np) = xx*(1.d0-y)*(1.d0-z)
              XIGAUSS_TETS(2,l,np) = y*(1.d0-z)
              XIGAUSS_TETS(3,l,np) = z
              WAGAUSS_TETS(l,np) = wx*wy*wz*(1.d0-z)**2*(1.d0-y)
              ws = ws + WAGAUSS_TETS(l,np)
              if (kwrite.eq.1) then
                write(*,7002) i,j,k,l,XIGAUSS_TETS(1:3,l,np)
 7002           format('const_T: i,j,k = ',3i3,' l = ',i4,
     .                 ' xi = ',3e12.5)
              endif
            enddo
          enddo
        enddo
        if (kwrite.eq.1) then
          write(*,7003) ws
 7003     format('const_T: ws = ',e12.5)
          call pause
        endif
      enddo
c
c  ...CHECK : verify the integration rule
c
c  ...loop through orders p
      do np=1,7
c
c  .....loop through monomials
        do i=0,2*np
        do j=0,2*np
        do k=0,2*np
          if (i+j+k.gt.2*np) cycle
c
c  .......evaluate the integral using 3D integration
          kint = NSELECT_TETS(np)
          nint= NRGAUPO_TETS(kint)
          val1 = 0.d0
          do l=1,nint
            xx = XIGAUSS_TETS(1,l,kint)
            y  = XIGAUSS_TETS(2,l,kint)
            z  = XIGAUSS_TETS(3,l,kint)
            wa = WAGAUSS_TETS(l,kint)
            val1 = val1 + xx**i*y**j*z**k*wa
          enddo
c
c  .......evaluate the integral using the 2D integration
          nord=(i+j+k+1)/2+1
          kint = NSELECT(nord)
          nint = NRGAUPO(kint)
          val2 = 0.d0
          do l=1,nint
            xx = XIGAUSS(2,l,kint)
            y  = XIGAUSS(3,l,kint)
            wa = WAGAUSS(l,kint)/2.d0
            val2 = val2 + xx**i*y**j*(1.d0-xx-y)**(k+1)/(k+1.d0)*wa
          enddo
          diff = abs(val1-val2)
          if (diff/abs(val1).gt.1.d-13) then
            write(*,7004) np
 7004       format('const_T: np = ',i2)
            write(*,7005) i,j,k
 7005       format('const_T: i,j,k = ',3i3)
            write(*,*) 'val1,val2 = ',val1,val2
            call pause
          endif
        enddo
        enddo
        enddo
      enddo
c
      INITIALIZED = .TRUE.
c
c
      end subroutine init_gauss_quadrature
