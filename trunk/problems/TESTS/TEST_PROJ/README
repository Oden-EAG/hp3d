P. Gatto, Jan 2015

TEST_PROJ TESTING SUITE
=======================

Overview
--------

This is the main testing suite. It started as an implementation of the H1
projection on a polynomial space, and it was intended to check that the H1
shape functions could reproduce polynomials. At present, this suite:

  - checks for deadlocks in the refinement algorithm;
  - tests reproducibility of polynomials over the whole exact sequence for
    each master element;
  - tests the consistency of orientations in the shape functions
    implementation;
  - tests H1, H(curl), H(div) constrained approximation.

Let us recall that the current implementation supports elements of the 1st
kind (only one drop in order of approximation across the entire sequence).
The following tests are implemented:

  TEST 1
  Solve projections on appropriate polynomial spaces over the whole exact
  sequence. Polynomial spaces are determined through "-problem" flag.

  TEST 2
  Select 1st block in the data structure, modify edge and face orientations
  and solve projections as in TEST 1. Polynomial spaces are determined
  through "-problem" flag.

  TEST 3
  Select 1st block in the data structure, loop over elements refinements,
  solve projections as in TEST 1. Polynomial spaces are determined through
  "-problem" flag.

  TEST 4
  Perform multiple levels of refinements on the hybrid mesh, by selecting  
  elements and refinement kinds at random.

The main driver, which runs all tests, is "test.sh". Each test driver contains
parameters that could and should be modified to test different scenarios. Run
"help.sh" for a list of flags controlling the executable. The following tests
are available:

          | TETR      PRIS      HEXA      PYRA      HYBR
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  TEST 1  | test05    test01    test03    test09
          | 
  TEST 2  | test06    test02    test04              test08
          |
  TEST 3  |                                         test07
          |
  TEST 4  |                                         test00

Each test will dump the results to "files/dump_error_<01,...,08>" and,
by calling script "check_err.sh", check that the error is below an acceptable
tolerance (1.E-11). The last column of file "dump_error_< ... >" contains a tag
that allows to match the error to a particular scenario. Each tag must be read 
right-to-left, a digit at a time, in the following way:

  TAG = ... i4 i3 i2 i1

  i1 = polynomial degree in z
  i2 = polynomial degree in y
  i3 = polynomial degree in z
  i4 = 1 - lower order polynomial ; 2 - higher order polynomial (see exact.F90)

If there are any remaining digits in the tag (should happen for TEST 2 and 
TEST 3 only) they should be matched to the first column of "files/dump_tags_< ... >",
where flipped orientaions an performed refinements are reported. 


Remarks
-------

1. TEST 1 should be run for each element with the maximum order of
   approximation supported by the code (it might take a while, but it is 
   feasible).

2. Running TEST 2 with the maximum order of approximation is extremely
   expansive. If TEST 1 is successful, it is reasonable to seattle on a
   lower order, or test projection onto a few polynomials only (this can be 
   done by running the code interactively). Although it is of value to run the
   test on a mesh comprised of a single element, the real test is when it is run
   on the hybrid mesh. When run in interactive mode, it allows the user to select
   any block in the data structure, change edge and face orientations, and select a
   refinement kind before performing the projections.

3. TEST 3 is the ultimate test, since it checks refinements and constrained 
   approximation. When run in interactive mode, it allows the user to select any
   block in the datastructure, change edge and face orientations, and select a
   refinement kind before performing the projections.


Status as of Friday, Jan 30, 2015
---------------------------------

Shape functions for pyramid added.

          | TETR      PRIS      HEXA      PYRA      HYBR
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  TEST 1  | OK (1)    OK (1)    OK (1)    OK (4)
          | 
  TEST 2  | OK (2)    OK (2)    OK (2)              OK (3)                   
          |
  TEST 3  |                                         OK (3)
          |
  TEST 4  |                                         OK

  (1) Tested with p = MAXP = 6, tolerace = 1.E-11
  (2) Tested with p = 3, tolerace = 1.E-11
  (3) Tested with p = 4, tolerace = 1.E-11
  (4) Tested with p = MAXP = 6, tolerace = 1.E-11, polynomial space
      corresponding to tetrahedron



Status as of Tuesday, Jan 20, 2015
----------------------------------

ALLES GUTE! (After all, German is a superior language...)

          | TETR      PRIS      HEXA      PYRA      HYBR
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  TEST 1  | OK (1)    OK (1)    OK (1)
          | 
  TEST 2  | OK (2)    OK (2)    OK (2)              OK (3)                   
          |
  TEST 3  |                                         OK (3)
          |
  TEST 4  |                                         OK

  (1) Tested with p = MAXP = 6, tolerace = 1.E-11
  (2) Tested with p = 3, tolerace = 1.E-11
  (3) Tested with p = 4, tolerace = 1.E-11
